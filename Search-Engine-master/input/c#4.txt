So we've already discussed variables to some extent. But now let's talk about how they work with what we call operators. Operators apply simple operation such as addition and multiplication to the operands like numbers. They usually return a new value that is a result of the operation. Some operators are uner Airi meaning they work on a single operand. So for the example that you see here where it says Y plus plus that's C-Sharp statement contains a single unitary operator and a single operand. That plus plus is an increment operator and modifies the value of the operand y. So why is the operand and the plus plus is the operator. Now most operators are binary meaning that they work on two operands such as in the example below. Two plus three. So two and three are the operands. And plus is the operator. And right below that where you see y equals two plus three. Well that statement contains two binary operators each with two operands. The assignment operator equal has the integer variable Y and the expression two plus three as operands. Also the expression 2 plus three itself consists of an addition operator and two operations. That is two and three. Let's go ahead and work out some examples in Visual Studio and Visual Studio. I'd like you to open up what's referred to as the interactive window and let's go ahead and do a shortcut by simply typing in. Enter active. And before I even finish writing the word I'll see that there is C-Sharp interactive and that's what we want. Let's go ahead choose that. And this brings up this pain down here where it says C-Sharp interactive with the C-sharp interactive window. You get immediate feedback on what an expression will return. So for example I can type in and I give it a value of three. And when I hit enter if I now type in I hit enter I get three. So it's kind of like programming on the fly without having to save and build and execute console or any other type of application. Now let's go ahead and enter another example. We'll say it and give the variable x a value of three and on the next line we're going to say Aunt the value of y is equal to x plus plus and I'll hit enter. So now if I enter X to see the value what do you think is going to show up. Let's go ahead and hit enter and see for and you might be surprised to see that. But the reason why is because. Plus plus operator executes after the assignment and this is known as postfix you need to use a prefix and I'll show you that. But let's go ahead and take a look at the value of y. So you see why has the value of three because it was assigned their value before it was incremented. So now let's do this again. I'm going to sign X equals 3 and Y. Is equal to. And this time will Taipan plus plus x. And at this point if we check the value of x we'll get four and if we look at the value of y that also says 4. So clearly it incremented before to sign this time so therefore both x and y are equal to 4. We could also continue to experiment with arithmetic operators. So you can simply do something like 11 plus 3 and hit enter. And that will just give you 14. Right off the bat. Same thing with 11 minus 3 8 11 times 3 33. If we do 11 divided by three we get in hole number three. And that's not a mistake. We just need to be aware of how things work. If we want an accurate decimal representation in the solution with this division we would need to type in eleven point. Oh divided by three. And now you get three point six six. And that happens because the operator now returns a floating point value rather than a whole number and the last thing I would like to show is if we wanted to check the remainder of 11 and 3 going into it we can use the remainder operator and we get two. If you want to learn more about the operators and a different options that you have in C-sharp just go to this Web site here it lays it out fairly clearly with some nice examples. So I've referenced this Web site quite a few times throughout my career and it's one of my favorites So definitely keep this as a reference.

