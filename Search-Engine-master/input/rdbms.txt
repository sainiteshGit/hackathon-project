One of the most common places to store data is in an RDBMS relational database management system come ones include Microsoft sequel server one from Oracle and sequel like now Microsoft offers various editions of its sequel server products. However in this course we're going to be using the free version that can run standalone known as a local d.b. Now local D-B is just a lightweight version of the sequel Server Express database engine that is targeted for program development so that developers can just use it locally on their machine to learn how to manage a database using dot net core. It would be useful to have a sample one to practice on that has medium complexity and a decent amount of sample records. But fortunately Microsoft does offer one known as the Northwind database and here in the root of your exercise five folder you should see a file called North when Dot Escal. This is the file that contains sequel script that can be used to generate a database. What you see over here is a set of tables from this Northwind database and their relationships to each other. But rather than talk about it on the screen let's jump right in and generate our own database using that sequel script. So in order to create our database from Visual Studio what we're going to do is go to Thile open and then choose File and navigate to where we have our Northwind sequel script. I'll choose that and open and all this. And here is the sequel script that will be used to generate our database. So the next thing to do is just to right click anywhere. And this text editor and then choose execute. And within this dialog box next to server name we're going to paste in local D-B in parentheses. Slash M as well. Local D.B and then connect at the bottom left hand side you should see that it was executing. Once you see the commands completed successfully then the north one database has just been created. Now we can connect to it to connect to it. We're going to go and use the server explore. And if you don't see it on your left hand side you can just go to the quicklaunch and type in Server X and server Explorer options should come up. It actually tells you you can go to the view under the menu and then choose server Explorer. But I'll just click here to bring it up. So next let's go to data connections and right click and choose ad connection. Now if this is your first time doing this you might have a window that says choose data source. Go ahead and select Microsoft sequel server just like I have here. As Microsoft sequel server fact if I choose change this is the window that you should see have popped up. Go ahead and click OK. And now for the server name I will enter an local the B slash m s s q out local the B again and make sure it's written just like this with local the B in parentheses. Now we can go ahead and select the database and we're going to choose north. When this is under the section connect to a database not to make sure everything is OK we can we can click test connection that worked OK so I click OK and then click OK one more time. At this point under the server Explorer if you go under data connections you should see an option. That allows you to select a Northwest database and if you drop down the arrow here and then expand the tables folder you can see our tables including a Products table. This all came from when the file was executed. Why don't we go ahead and reichlich the products table and then choose Show table data. And here you can see a nice view of all the records of the table. Never wanted to get some information regarding how this table was structured. We can go ahead close this and go back to the server Explorer on products. If you right click and chose open table definition here will be able to see a view of some details regarding the design of the table. So this includes the column names but also the data type of each column. So Product ID we know is an integer the product name is A and var car that's limited to 40 characters. We can see whether or not it allows nulls and other random details. And this is all pretty useful and very convenient that we can do this within Visual Studio. But now what about if we want to connect to the database through code. How does that work. Let's take a look at that next. So whenever we want to connect to a Microsoft sequel server we need to know some pieces of information. The first is a data source server that is the name of the server computer that is running the relational database management system. The next thing is the initial catalog that's the name of the database. They call it initial catalog but you need to think in terms of database. That is where the database name is next is the integrated security or trusted connection security information. So such as username and password or whether we should just pass the currently logged on users credentials automatically. And in this case that's what's going on. You see integrated security as highlighted in as equals to true. If we weren't using that we'd have to include the username and password as parameters. Now this code snippet here comes from what we refer to as a web config it's a configuration file where you have all types of various configuration information one of which is a connection string and connection strings are generally used for purposes like this like connecting to some form of data source and in this case it's database. Now there's various locations you can have database information to connect to it too but we're not going to get into that. What we are going to do now is step back and just remember that these are some of the key pieces of information that you need to know the name of the server name or database and security information. And right now we're going to turn our attention to using Entity Framework which is an area that works in conjunction with the database. And we'll talk about how next.

