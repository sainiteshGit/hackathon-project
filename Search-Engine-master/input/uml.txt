OK so we are now ready to create an app with you W.P. and in order to do so we need to enable developer mode in Windows 10 which is done by going to your start menu and then settings update and security on the left hand side choose for developers and then choose developer mode go ahead and accept the warning about how it could expose your device and personal data to security risk and wait for the installation process to finish. Then you can go ahead and close your window. You may be prompted to reboot. If so go ahead and do so and at that point we're ready to move on to Visual Studio. OK so I'm here in Visual Studio ready to create an app for you to be happy. I'll go onto topic C and add a new project and this time I'm going to make sure that visual C-Sharp is selected and then choose blank app which is of type universal windows at the very top here. I'll navigate to my appropriate location. And I'll simply call this pay and click OK. Now add the new universal windows project dialog box as you see here. We're going to want to choose the minimum version. So we want it to be Windows 10 build it 1 0 2 4 0. So something to no developers writing UW apps for general audiences should choose the latest build of Windows 10 as the minimum version. However developers writing enterprise apps should choose an older minimum version simply for compatibility reasons. Especially when you're dealing with enterprise apps that build one or two for all was released and January 2015 and it's really the best choice for maximum compatibility. Now my target version says Windows 10 for crater's update. This might be different from you but this is what it is for me at the time of this recording. So at this point I can just go ahead. OK now in the solution explorer I'll go ahead and set you go pupae as my startup project and then double click on the main page. So what we're doing is we're opening up this page for editing and we're going to take a look around and get familiar with it. Now you'll see the XML design window showing a graphical view which is above here and then a Zambo view of the main page that XML file which is right below here. The Zemo designer is split horizontally but you can toggle two vertical split and collapse one side by clicking the buttons on the right edge of the divider. So for example over here I can choose vertical split and then bring it back to a horizontal split if I want. You can also swap the used by clicking the double arrow button and the divider which is right over here. Now if you want to zoom in on either of these views you can control that on the left hand side over here or once you have a focus by clicking anywhere on under pain here. If you hold the control button and use your mouse scrolling button going up or down you can control whether to zoom in or zoom out. The same applies for the Zemo I can control that over here by changing a percentage such as typing and 50 or hold the control key and zoom in and out using my mouse scroll button. Now let's go ahead and take a look at our tool box which I have over here on my left hand side. And if for some reason you don't see the tool box you can go to your view menu and select tool box over here. Now I do want to note that the tool box has sections for common Zemo controls all Zemo controls and general and there's quite a bit of controls here so if you're ever going through and you're trying to find one you can just also just type in the name of the control or at least start typing it in like if I typed in B U T here it'll start filtering and I can go ahead and select button if I want to. In fact why don't we go ahead and drag and drop the button control from the tool box onto the graphical view. I go ahead and resize it by clicking holding and dragging any of the 8 square resize handles on each edge in each corner. Also by the way. Note that the button is given a fixed width and height and fix left and top margin to position and size it inside the grid. I'll go ahead and add 60 percent here just to zoom in a bit so we could see the button a little bit clearer. Now although it's possible that you can drag and drop controls. It's always better to use the Zahm of view for layout. So in fact in the Zahm of you find the button element and delete it which is right over here for me on 9 11. And now at this point what we're going to do is create another button by using an event with some functionality. So OK so we are continuing with our exercise. And what I'd like to do now is within the Zahm of you inside the grid element enter the following. Marco. Note that the button is automatically sized to its concept. Click me a line vertically in the center and align horizontally to the left as shown here on the screen. If for some reason you don't see it. Just make sure that you position your screen accordingly and double check your Whether or not you need to zoom out a little bit. Now I would like to do next is to modify the Zabol to wrap the button element inside a horizontally oriented stacked panel that is inside a vertically oriented stack panel. So to do this I will first create a tag stack Padel and then within here create another stack panel nested. And in addition how specified orientation to be horizontal and I'll then grab my button and drag it into the inner stack panel. And as you can see I just automatically formatted it just by erasing the last angle bracket on the last panel and adding it back in automatically. Formats your code. So now other designer if I scroll up I will see my Click Me button there. The next thing I want to do is to modify the button element to give it a new event handler for its click event. And the way I do that is by coming over here with the attributes of the button elements and type in. And I could just hit tab once click is highlighted and then I see the intellisense give me the option for a new event handler and I'll hit tab again. And automatically you'll see Click Me button underscore click added. And now let's make sure everything is safe. I'll go ahead and click the save all and then double click on the main page C-Sharp code file. And here you'll see our Click Me button method. Now if you actually just typed in the event handler without using the Intellisense and how I tabbed over this wouldn't be here. So this is just something to note. It generated this code dynamically because I used that visual studio feature to automatically add the event handler. Now at this point let's go ahead and add one line of code to the event handler let's say the click me button which has a property of concept is equal to and will specify a date time. And we want to choose the now property and then invoke the two string method. Unless they specify the format and terminate the statement. So this way it will give us the time and so that is almost it. Now we can try to run our application. Let's go ahead and hit Control F5 and see what happens. So we get this message it says verify that the project is selected to be deployed in the solution configuration manager. And that's because it is expecting that the project is deployed before it runs and to do that as it indicates here we can either manually deploy it or have the configuration manager do that for us every time we run a project. So I can come over here and choose deploy you W.P. and then run it and that will work. But so we don't have to do this every time we go to the configuration manager and select you WP and make sure that the ploy column we have it checked. Now if you save and try to run again so we got that error. Let's go ahead and build our project and make sure that is done first before we try to execute it. And then let's try to run again. Control 5. And here we go. Now we can go ahead and click on our Click Me button and every time we click the buttons concert's should change to show the correct time. And works just as expected. And that's our simple app.

